/* DebugNativeHost.java
 * kurt rudahl 17-Apr-2002
 * copyright  2001-2007 Sally Goldin & Kurt Rudahl
 * purpose: permit classes to use methods which may, or may not,
 *	    access a native host via e.g. JNI
 *	    In this implementation, all of the methods print to System.out
 **************************************************************************
 * $Id: DebugNativeHost.java,v 1.3 2007/01/05 07:41:57 rudahl Exp $
 * $Log: DebugNativeHost.java,v $
 * Revision 1.3  2007/01/05 07:41:57  rudahl
 * added Whatis info
 *
 * Revision 1.2  2005/02/06 08:08:11  goldin
 * Fix JavaDoc warnings
 *
 * Revision 1.1  2002/04/17 21:11:58  rudahl
 * added NativeHost interface; not yet used
 *
 **************************************************************************
 * history 4/17/2002   created
 *                     Generated by Together
 */

package com.grs.gui;

/**
 * Permits classes to use methods which may, or may not,
 * access a native host via (for example) JNI.
 * In this implementation, all of the methods 
 * print to System.out
 */
public class DebugNativeHost implements NativeHost
    {
    public void SendEvent(int MsgNo)
	{
	System.out.println("NativeHost::SendEvent "+MsgNo);
	}
    public void SendEvent(String MsgName)
	{
	System.out.println("NativeHost::SendEvent '" + MsgName + "'");
	}

      /** Fix Non-client area of dialog which has just been displayed
       *  find the dialog window and a) change the title b) kill SystemMenu
       *  and c) set it to be TOPMOST
       *  @param CurrentTitle   string which is used to find the dialog
       *  @param NewTitle   string which will replace the title, or ""
       *  @param bMoveSizeOK  do not delete Move or Size menu items
       */
    public void FixupNCDialog(String CurrentTitle, 
			      String NewTitle,
			      boolean bMoveSizeOK)
	{
	System.out.println("NativeHost::FixupNCDialog rename '"
			   + CurrentTitle + "' to '" + NewTitle + "' "
			   + "BoveSizeOK=" + bMoveSizeOK);
	}

      /* controls the dialog-topmost status specifically for the 
       * one and only PromptAndReply panel. Assumes viewjava.cpp
       * already knows the window handle
       * @param bRelease   true => release window from being topmost
       *                   false => restore window to being topmost
       */
    public void SetNCDialogTopmost(boolean bRelease)
	{
	System.out.println("NativeHost::SetNCDialogTopmost release=" 
			   + bRelease);
	}
	{}

      //~~ for testing, uncomment the method definition
      //~~ for production, uncomment the native declaration 
    public void log(String Msg)
	{
	System.out.println("NativeHost::log '"+Msg+"'");
	}

    protected static String cvsInfo = null;
    protected static void setCvsInfo()
        {
        cvsInfo = "\n@(#)  $Id: DebugNativeHost.java,v 1.3 2007/01/05 07:41:57 rudahl Exp $ \n";
	}
    }
