/* LinearPlaneSpace.java
 * kurt rudahl 10/26/2001
 * copyright goldin-rudahl associates
 * purpose:
 ************************************************************************
 * $Id: LinearPlaneSpace.java,v 1.3 2001/10/29 13:17:41 rudahl Exp $
 * $Log: LinearPlaneSpace.java,v $
 * Revision 1.3  2001/10/29 13:17:41  rudahl
 *  fixed bugs in drawing fn params
 *
 * Revision 1.2  2001/10/27 17:32:37  rudahl
 * actually made it work, for Rulers
 *
 * Revision 1.1  2001/10/27 13:13:31  rudahl
 * initial despoit, from tower. Not yet working
 *
 ************************************************************************
 * history 10/26/2001  created
 *                     Generated by Together
 */

package com.grs.metricCanvas;

import java.awt.*;

/**
 * This is your normal, 2D drawing canvas 
 */
public class LinearPlaneSpace extends PlaneSpace
    {
    LinearPlaneSpace(Graphics g, PlaneSpace parent, 
		     double[] minRange, double[] maxRange, 
		     Dimension logicalRange, Dimension offset) 
        {
	super(g,parent,(Metric[])null,minRange,maxRange,logicalRange,offset);
	Metric[] m = new Metric[2];
	m[0] = new LinearMetric(minRange[0],maxRange[0],offset.width,offset.width+logicalRange.width);
	m[1] = new LinearMetric(minRange[1],maxRange[1],offset.height,offset.height+logicalRange.height);
	setMetrics(m);
	}

      /** construct a LinearPlaneSpace using a default 0.0 to 1.0 data range
       */
    LinearPlaneSpace(Graphics g, PlaneSpace parent, 
		     Dimension logicalRange, Dimension offset) 
        {
	this(g,parent,new double[]{0.0,0.0}, new double[]{1.0,1.0},
	     logicalRange,offset);
	}

      /*
    public Dimension remap(int iX, int iY)
      { }

    public int remapX(int iX)
  { }

    public Rectangle remap(Rectangle rect)
  { }

    public int remapY(int iY)
  { }

    public Dimension remap(Dimension dim)
  { }
  */
    }
